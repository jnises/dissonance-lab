#!/bin/bash

# Auto-detecting development script for dissonance-lab
# This script automatically detects your platform and runs xtask with the correct target

set -euo pipefail

# Function to detect the native target
detect_target() {
    local arch=$(uname -m)
    local os=$(uname -s)
    
    case "${os}" in
        "Darwin")
            case "${arch}" in
                "arm64"|"aarch64") echo "aarch64-apple-darwin" ;;
                "x86_64") echo "x86_64-apple-darwin" ;;
                *) echo "x86_64-apple-darwin" ;; # fallback for macOS
            esac
            ;;
        "Linux")
            case "${arch}" in
                "x86_64") echo "x86_64-unknown-linux-gnu" ;;
                "aarch64"|"arm64") echo "aarch64-unknown-linux-gnu" ;;
                *) echo "x86_64-unknown-linux-gnu" ;; # fallback for Linux
            esac
            ;;
        *)
            echo "x86_64-unknown-linux-gnu" # fallback
            ;;
    esac
}

# Function to show usage
show_usage() {
    echo "Usage: $0 [dev|build|build-debug]"
    echo ""
    echo "Commands:"
    echo "  dev         Start development environment (log server + trunk serve)"
    echo "  build       Build project for release"
    echo "  build-debug Build project for debug"
    echo ""
    echo "The development environment includes:"
    echo "  - HTTP log server on port 3001"
    echo "  - Trunk development server on port 8080"
    echo "  - Automatic index.html generation"
    echo "  - Audio worklet building"
    echo ""
    echo "Press Enter or Ctrl+C to stop the development environment."
}

# Check if cargo is available
if ! command -v cargo &> /dev/null; then
    echo "Error: cargo not found. Please install Rust and Cargo." >&2
    exit 1
fi

# Detect the target platform
TARGET=$(detect_target)
echo "🔍 Detected platform: ${TARGET}"

# Parse command line arguments
case "${1:-}" in
    "dev")
        echo "🚀 Starting development environment..."
        cargo run -p xtask --target "${TARGET}" dev
        ;;
    "build")
        echo "🔨 Building for release..."
        cargo run -p xtask --target "${TARGET}" build
        ;;
    "build-debug")
        echo "🔨 Building for debug..."
        cargo run -p xtask --target "${TARGET}" build-debug
        ;;
    "-h"|"--help"|"help")
        show_usage
        ;;
    "")
        echo "Error: No command specified." >&2
        echo ""
        show_usage
        exit 1
        ;;
    *)
        echo "Error: Unknown command '$1'" >&2
        echo ""
        show_usage
        exit 1
        ;;
esac
