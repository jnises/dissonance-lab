[workspace]
members = [".", "audio-worklet", "shared-types"]
resolver = "2"

[workspace.dependencies]
egui = "0.32"
eframe = { version = "0.32", default-features = false, features = [
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "wayland",       # To support Linux (and CI)
] }
log = "0.4"
num-rational = "0.4"
num-traits = "0.2.19"
colorgrad = "0.7.0"
anyhow = "1.0.97"
crossbeam = "0.8.4"
wmidi = "4.0.10"
itertools = "0.14.0"
bitvec = "1.0.1"
strum_macros = "0.27.1"
midir = "0.10.1"
thiserror = "2.0.12"
web-time = "1.1.0"
parking_lot = "0.12.3"
js-sys = "0.3.77"
serde = { version = "1.0.219", features = ["derive"] }
serde-wasm-bindgen = "0.6.5"
wasm-bindgen = "0.2.100"
wasm-bindgen-futures = "0.4"
console_error_panic_hook = "0.1.7"
console_log = { version = "1.0", features = ["color"] }
web-sys = { version = "0.3.70", features = [
    "AudioContext",
    "AudioWorklet",
    "Worklet",
    "Blob",
    "Url",
    "AudioWorkletNode",
    "AudioWorkletNodeOptions",
    "AudioNodeOptions",
    "AudioDestinationNode",
    "MessagePort",
    "MessageEvent",
    "Response",
    "Window",
    "AudioWorkletGlobalScope",
    "AudioWorkletProcessor",
    "console",
    "MessageChannel",
] }

[package]
name = "dissonance-lab"
version = "0.1.2"
authors = ["Joel Nises <joel.nises@gmail.com>"]
edition = "2024"
include = ["LICENSE", "**/*.rs", "Cargo.toml"]
rust-version = "1.88"

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[dependencies]
egui.workspace = true
eframe.workspace = true
log.workspace = true
num-rational.workspace = true
num-traits.workspace = true
colorgrad.workspace = true
anyhow.workspace = true
crossbeam.workspace = true
wmidi.workspace = true
itertools.workspace = true
bitvec.workspace = true
strum_macros.workspace = true
midir.workspace = true
thiserror.workspace = true
web-time.workspace = true
parking_lot.workspace = true
js-sys.workspace = true
serde.workspace = true
serde-wasm-bindgen.workspace = true
wasm-bindgen.workspace = true
wasm-bindgen-futures.workspace = true
web-sys.workspace = true
shared-types = { path = "shared-types" }

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = "0.11"

[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2


[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
